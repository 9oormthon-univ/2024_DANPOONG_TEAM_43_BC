name: CD with Truffle

on:
  push:
    branches:
      - main  # main 브랜치에 push가 될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Install Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo usermod -aG docker $USER  # Grant docker permissions to the current user

      # 3. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # 4. Run Ganache Docker container
      - name: Run Ganache Docker container
        run: |
          docker run -d -p 7545:7545 trufflesuite/ganache-cli:latest
          sleep 30  # Increased sleep time to ensure Ganache is fully started

      # 5. Fix npm permissions
      - name: Fix npm permissions
        run: |
          sudo chown -R $USER /usr/local/lib /usr/local/bin /usr/local/share

      # 6. Install Truffle globally and dependencies
      - name: Install dependencies
        run: |
          npm install -g truffle solc@0.8.21
          npm install
          npm install axios
          npm install @openzeppelin/contracts

      # 7. Truffle compile
      - name: Compile Truffle contracts
        run: truffle compile

      # 8. Docker build & push to Docker repo
      - name: Docker build & push to Docker repo
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/bc .
          docker push ${{ secrets.DOCKER_REPO }}/bc

      # 9. Deploy to server
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker stop $(docker ps -a -q)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/bc
            sudo docker-compose up --build -d
            sudo docker image prune -f
